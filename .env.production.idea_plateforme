# Configuration de production pour IdéaLab
# Copiez ce fichier vers .env.production et remplissez les valeurs

# ===========================================
# CONFIGURATION GÉNÉRALE
# ===========================================
NODE_ENV=production
PORT=3000



# Paramètres de pool de connexions
DB_POOL_MIN=2
DB_POOL_MAX=10
DB_POOL_IDLE_TIMEOUT=30000

# ===========================================
# SÉCURITÉ JWT
# ===========================================
# Clé secrète pour signer les tokens JWT (GÉNÉRER UNE CLÉ FORTE)
# Utilisez: node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"
JWT_SECRET=VOTRE_CLE_SECRETE_TRES_FORTE_DE_64_CARACTERES_MINIMUM

# Durée de vie des tokens
JWT_EXPIRES_IN=7d

# ===========================================
# CORS ET DOMAINES
# ===========================================
# Domaine autorisé pour les requêtes CORS
CORS_ORIGIN=https://votre-domaine.com

# Domaines supplémentaires (séparés par des virgules)
ALLOWED_ORIGINS=https://votre-domaine.com,https://www.votre-domaine.com

# ===========================================
# EMAIL ET NOTIFICATIONS (OPTIONNEL)
# ===========================================
# Configuration SMTP pour l'envoi d'emails
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_SECURE=false
SMTP_USER=votre-email@gmail.com
SMTP_PASS=votre-mot-de-passe-app

# Email expéditeur
FROM_EMAIL=noreply@votre-domaine.com
FROM_NAME=IdéaLab

# ===========================================
# STOCKAGE ET UPLOADS (OPTIONNEL)
# ===========================================
# Configuration pour le stockage de fichiers
UPLOAD_MAX_SIZE=5242880
UPLOAD_ALLOWED_TYPES=image/jpeg,image/png,image/gif,image/webp

# AWS S3 (si utilisé)
AWS_ACCESS_KEY_ID=votre-access-key
AWS_SECRET_ACCESS_KEY=votre-secret-key
AWS_REGION=eu-west-1
AWS_S3_BUCKET=idealab-uploads

# ===========================================
# MONITORING ET LOGS
# ===========================================
# Niveau de log (error, warn, info, debug)
LOG_LEVEL=info

# Sentry pour le monitoring d'erreurs (optionnel)
SENTRY_DSN=https://votre-sentry-dsn@sentry.io/project-id

# ===========================================
# CACHE REDIS (OPTIONNEL)
# ===========================================
# URL de connexion Redis pour le cache
REDIS_URL=redis://localhost:6379

# ===========================================
# RATE LIMITING
# ===========================================
# Limite de requêtes par IP (par fenêtre de temps)
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100

# ===========================================
# ANALYTICS (OPTIONNEL)
# ===========================================
# Google Analytics
GA_TRACKING_ID=UA-XXXXXXXXX-X

# ===========================================
# SÉCURITÉ AVANCÉE
# ===========================================
# Clé pour chiffrer les données sensibles
ENCRYPTION_KEY=VOTRE_CLE_DE_CHIFFREMENT_32_CARACTERES

# Session secret pour les cookies
SESSION_SECRET=VOTRE_SECRET_DE_SESSION_FORT

# ===========================================
# CONFIGURATION SERVEUR
# ===========================================
# Timeout des requêtes (en millisecondes)
REQUEST_TIMEOUT=30000

# Taille maximale du body des requêtes
BODY_LIMIT=10mb

# ===========================================
# BACKUP ET MAINTENANCE
# ===========================================
# Configuration pour les sauvegardes automatiques
BACKUP_ENABLED=true
BACKUP_SCHEDULE=0 2 * * *
BACKUP_RETENTION_DAYS=30

# ===========================================
# VARIABLES SPÉCIFIQUES À L'ENVIRONNEMENT
# ===========================================
# URL de base de l'API
API_BASE_URL=https://api.votre-domaine.com

# URL de base du frontend
FRONTEND_URL=https://votre-domaine.com

# ===========================================
# INSTRUCTIONS DE GÉNÉRATION DES SECRETS
# ===========================================
# Pour générer des clés sécurisées, utilisez:
#
# JWT_SECRET:
# node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"
#
# ENCRYPTION_KEY:
# node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
#
# SESSION_SECRET:
# node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"

# ===========================================
# CHECKLIST DE SÉCURITÉ
# ===========================================
# ✅ Toutes les clés secrètes sont générées aléatoirement
# ✅ Les mots de passe de base de données sont forts
# ✅ CORS_ORIGIN est configuré avec le bon domaine
# ✅ HTTPS est activé sur le serveur
# ✅ Les variables sensibles ne sont pas commitées
# ✅ Les logs sont configurés pour la production
# ✅ Le monitoring d'erreurs est activé
