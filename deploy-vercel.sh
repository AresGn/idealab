#!/bin/bash

# üöÄ Script de d√©ploiement Id√©aLab sur Vercel
# Auteur: Assistant IA
# Date: $(date)

echo "üöÄ D√©ploiement Id√©aLab sur Vercel"
echo "=================================="

# Couleurs pour les messages
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fonction pour afficher les messages color√©s
print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# V√©rifier si Vercel CLI est install√©
if ! command -v vercel &> /dev/null; then
    print_error "Vercel CLI n'est pas install√©"
    print_status "Installation de Vercel CLI..."
    npm install -g vercel
fi

# V√©rifier si nous sommes dans le bon r√©pertoire
if [ ! -f "vercel.json" ]; then
    print_error "Fichier vercel.json non trouv√©. √ätes-vous dans le bon r√©pertoire ?"
    exit 1
fi

print_status "V√©rification des d√©pendances..."

# Installer les d√©pendances du client
print_status "Installation des d√©pendances client..."
cd client
if [ ! -d "node_modules" ]; then
    npm install
else
    print_success "D√©pendances client d√©j√† install√©es"
fi

# Build du client
print_status "Build du client..."
npm run build
if [ $? -eq 0 ]; then
    print_success "Build client r√©ussi"
else
    print_error "√âchec du build client"
    exit 1
fi

cd ..

# Installer les d√©pendances du serveur
print_status "Installation des d√©pendances serveur..."
cd server
if [ ! -d "node_modules" ]; then
    npm install
else
    print_success "D√©pendances serveur d√©j√† install√©es"
fi

cd ..

# V√©rifier les variables d'environnement
print_status "V√©rification des variables d'environnement..."

if [ -f ".env" ]; then
    print_success "Fichier .env trouv√©"
else
    print_warning "Fichier .env non trouv√©. Cr√©ation d'un exemple..."
    cat > .env.example << EOF
# Configuration de la base de donn√©es
DATABASE_URL=postgresql://username:password@host:port/database

# Configuration JWT
JWT_SECRET=your-super-secret-jwt-key-here

# Configuration de l'application
NODE_ENV=production
PORT=3000

# Configuration CORS
CORS_ORIGIN=https://your-domain.vercel.app
EOF
    print_warning "Veuillez configurer vos variables d'environnement dans Vercel Dashboard"
fi

# D√©ploiement sur Vercel
print_status "D√©ploiement sur Vercel..."

# Premi√®re fois ? Login requis
if ! vercel whoami &> /dev/null; then
    print_status "Connexion √† Vercel requise..."
    vercel login
fi

# D√©ploiement
print_status "Lancement du d√©ploiement..."
vercel --prod

if [ $? -eq 0 ]; then
    print_success "üéâ D√©ploiement r√©ussi !"
    print_status "Votre application est maintenant en ligne !"
    
    # Afficher l'URL de d√©ploiement
    DEPLOYMENT_URL=$(vercel ls | grep "idealab" | head -1 | awk '{print $2}')
    if [ ! -z "$DEPLOYMENT_URL" ]; then
        print_success "URL: https://$DEPLOYMENT_URL"
    fi
    
    echo ""
    echo "üìã Prochaines √©tapes :"
    echo "1. Configurez vos variables d'environnement dans Vercel Dashboard"
    echo "2. Configurez votre base de donn√©es PostgreSQL"
    echo "3. Testez votre application en production"
    echo ""
    
else
    print_error "√âchec du d√©ploiement"
    exit 1
fi

print_success "Script termin√© avec succ√®s !"
